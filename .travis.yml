dist: xenial
sudo: required

language: generic

go_import_path: gopkg.in/meyskens/lookout-sdk.v0

git:
  depth: false

stages:
  - name: test
  - name: release
    if: tag IS present

jobs:
  include:
    - name: 'Linters'
      stage: test
      language: python
      python: '3.6'
      install:
        - pip3 install --upgrade pycodestyle
      script:
        - pycodestyle --max-line-length=99 --exclude='./python/lookout/sdk' .

    - name: 'Python: example integration tests'
      stage: test
      language: python
      python: '3.6'
      install:
        - ./_tools/ci-run-bblfsh.sh
        - pip3 install -e python
      script:
        - ./_tools/install-lookout-latest.sh
        - (python3 -u examples/language-analyzer.py |& tee ./py-analyzer.log)&
        - sleep 5s
        - ./lookout-sdk review --log-level=debug --from 0a9d1d159d2b0064c32df8d2287b174a91390b1a --to HEAD |& tee ./sdk.log
        - grep -v -i "error" ./py-analyzer.log > /dev/null
        - grep -v -i "error" ./sdk.log > /dev/null

    - &golangIntegrationTest
      name: 'Golang 1.12: example integration tests'
      stage: test
      language: go
      go: '1.12'
      install:
        - go version
        - go get ./examples
      script:
        - ./_tools/ci-run-bblfsh.sh
        - ./_tools/install-lookout-latest.sh
        - (go run examples/language-analyzer.go |& tee ./go-analyzer.log)&
        - sleep 5s
        - ./lookout-sdk review --log-level=debug --from 0a9d1d159d2b0064c32df8d2287b174a91390b1a --to HEAD |& tee ./sdk.log
        - grep -v -i "error" ./go-analyzer.log > /dev/null
        - grep -v -i "error" ./sdk.log > /dev/null

    - <<: *golangIntegrationTest
      name: 'Golang 1.11: example integration tests'
      go: '1.11'

    - &golangTest
      name: 'Golang 1.12 and Python 3.6: test'
      stage: test
      language: go
      go: '1.12'
      env:
        - PYENV_VERSION="3.6.7"
      script:
        - make dependencies
        - make test

    - <<: *golangTest
      name: 'Golang 1.11 and Python 3.6: test'
      go: '1.11'

    - &generatedCode
      name: 'Golang 1.12: generated code'
      stage: test
      language: go
      go: '1.12'
      env:
        - PYENV_VERSION="3.6.7"
      script:
        - make protogen
        - make no-changes-in-commit

    - <<: *generatedCode
      name: 'Golang 1.11: generated code'
      go: '1.11'

    - name: 'Python: release a library'
      stage: release
      language: python
      python: '3.6'
      before_script:
        - pip3 install twine
        - cd python
      script:
        - python3 setup.py sdist bdist_wheel
        - twine upload dist/*.tar.gz dist/*py3-none-any* -u $PYPI_LOGIN -p $PYPI_PASS
      skip_cleanup: true

before_cache:
  # make bblfsh images readable
  - sudo chmod -R 777 $HOME/bblfshd/images

cache:
  directories:
    - protoc
    - $HOME/.cache/pip/wheels
    - $HOME/bblfshd/images
